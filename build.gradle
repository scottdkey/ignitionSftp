buildscript {
    repositories{
        gradlePluginPortal()
        mavenCentral()
        mavenLocal()
        google()
        maven { url 'https://maven.google.com' }
        maven { url "https://nexus.inductiveautomation.com/repository/inductiveautomation-thirdparty/" }
        maven { url "https://nexus.inductiveautomation.com/repository/inductiveautomation-releases/" }
        maven { url "https://nexus.inductiveautomation.com/repository/inductiveautomation-snapshots/" }
    }

    dependencies {
        classpath("com.inductiveautomation.gradle:ignition-module-plugin:1.2.10-SNAPSHOT")
    }
}



plugins {
    id "base"
    id "org.jetbrains.kotlin.jvm" version "1.5.30"

}


allprojects {
    apply plugin: "ignition-module-plugin"

    ignitionModule {
        fileName "skmSFTP"
        moduleRoot "skmSFTP"
        moduleName "skmSFTP"
        moduleId "com.skm.sftp"
        moduleVersion "${project.version}"
        moduleDescription "adding SFTP functionaltity to ignition 8.1.*"
        requiredFrameworkVersion "8"
        requiredIgnitionVersion "8.1.0"
        isFree true
        license "license.html"
        moduleDependencies = [
            [scope: "C", moduleId: "com.inductiveautomation.perspective"],
            [scope: "G", moduleId: "com.inductiveautomation.perspective"],
            [scope: "D", moduleId: "com.inductiveautomation.perspective"]
        ]
        projectScopes = [
            [name: "common", scope: "CGD"],
            [name: "client", scope: "CD"],
            [name: "gateway", scope: "G"],
            [name: "designer", scope: "D"],
        ]
        hooks = [
            [scope: "C", hookClass: "com.skm.sftp.client.ClientHook"],
            [scope: "G", hookClass: "com.skm.sftp.gateway.GatewayHook"],
            [scope: "D", hookClass: "com.skm.sftp.designer.DesignerHook"]
        ]
    }
    repositories {
        gradlePluginPortal()
        mavenCentral()
        mavenLocal()
        google()
        maven { url 'https://maven.google.com' }
        maven { url "https://nexus.inductiveautomation.com/repository/inductiveautomation-thirdparty/" }
        maven { url "https://nexus.inductiveautomation.com/repository/inductiveautomation-releases/" }
        maven { url "https://nexus.inductiveautomation.com/repository/inductiveautomation-snapshots/" }
    }

}

task deepClean() {
    dependsOn allprojects.collect { "${it.path}:clean" }
    description "Executes clean tasks and remove node plugin caches."
}

wrapper {
    gradleVersion "6.9.1"
    distributionType Wrapper.DistributionType.ALL
}